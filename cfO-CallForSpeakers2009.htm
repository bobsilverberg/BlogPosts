Dear cf.Objective() Steering Committee,

I understand that the Call for Speakers is underway, and I would very much like to present at the 2009 conference.  This is the first time that I have responded to an official Call for Speakers, so I am including the information that I hope is relevant.  I apologize in advance if I am providing too much or too little information, or being too general or too specific.

Although I am not looking to present on more than one topic, I thought it prudent to describe the various topics that I am interested in presenting, which will give you an opportunity to choose which topic, if any, you'd like me to present.

There are three main topic areas about which I am interested in speaking:

1. Object Oriented Validations
2. Building an Object Oriented Model
3. Real World Transfer ORM

For topic area #1, which contains content discussed on my blog at http://www.silverwareconsulting.com/index.cfm/ValidateThis, I see two potential presentations:

Option A:

Title:
An Object Oriented Approach to Validations

Description: 
Performing validations on user input is something that all of us, as application developers, must do.  When moving from a procedural to an object oriented approach many developers have difficulty determining how and where to perform validations.  In this session you will be introduced to an object oriented approach to validations.  This approach enables you to add validation "smarts" into your business objects, while keeping that logic fully encapsulated outside of the objects, meaning that any changes to your validation rules and/or logic will have zero impact on the rest of your model.  We'll look at the individual objects that comprise this approach, and understand how they work together to automatically perform server-side and generate client-side validations using metadata from a simple xml file.  You will leave the session with a better understanding of how to design using objects, as well as a tool that will greatly simplify the task of adding validations to your object oriented application.

Audience:
Intermediate to advanced developers who are familiar with basic object oriented concepts and are interested in learning about object oriented design.

Option B:

Title:
Automagic Validations for Objects

Description: 
Are you confused about where to put the validation logic in your object oriented application?  Are you tired of writing one set of validations for the server side and another set for the client side?  Are you looking for a way to encapsulate your validation logic, so your business objects do not have to change each time your validation rules change?  If you answered yes to any of those questions, then this is the session for you.  In this session you will learn about an open source set of objects that are easily incorporated into your existing model, which will deliver all of the above.  You define your business rules in a simple XML file and the framework will automagically perform all of your server side validations and generate all of your client side validations.  What's more, the framework is flexible and extensible enough to allow you to define an unlimited number of custom validation types and messages, all without touching any of the framework's or your own code.  You'll leave the session with an undertanding of what the framework can do for you, as well as how to implement it into a new or existing application.

Audience:
Developers who currently use business objects (e.g., users of Transfer and Reactor, users of Illudium for generating objects, etc.) and are interested in learning about a tool that they can take away and use immediately.


Topic area #2, Building an Object Oriented Model, is based on content discussed on my blog at http://www.silverwareconsulting.com/index.cfm/How-I-Use-Transfer.  Although the blog postings were written specifically about Transfer, most of the information about building an OO model is generic to any persistence layer.  So, if a presentation on this topic that *is not* specific to Transfer would be of interest to you then this is a possibility.

Option C:

Title:
Building an Object Oriented Model

Description: 
When making the move from a procedural to an object oriented approach one often comes across a pattern that involves using services and gateways to act as a sort of middle man between a controller and your actual business objects.  This session will present an approach to implementing a common set of services and gateways.  Through the use of abstract classes you will see how to eliminate duplicate code and how to encapsulate logic to increase the cohesiveness of your entire model.  We will start with the basics, describing what services and gateways are, and then look at builing a model from the ground up.  You'll leave the session with an understanding of the components that go into building a model, as well as a set of tools that will allow you to create and maintain your services and gateways in a quicker and more efficient manner.

Audience:
Beginning to intermediate developers who have some experience with and knowledge of basic OO concepts and are interested in learning about how to design an OO model.


Topic area #3, Real World Transfer ORM, is really about me discussing efficient/productive ways to use Transfer.  I'm sure that Mark Mandel will be presenting at the conference, and he'll undoubtedly be giving one or two talks on Transfer, so I'm not sure if you need any more Transfer specific material.  My intent is to present on Transfer from a developer's perspective, rather than from a framework author's perspective.  There is a ton of stuff that I could present, so I'll just list a couple of examples of possible sessions:

Option D:

Title:
Transfer, Services and Gateways, oh my!

Description: 
When working with Transfer ORM one often comes across a pattern that involves using services and gateways to act as a sort of middle man between a controller and Transfer.  This session will present an approach to implementing a common set of services and gateways.  Through the use of abstract classes you will see how to eliminate duplicate code and how to encapsulate logic to increase the cohesiveness of your entire model.  You'll leave the session with a set of tools that will allow you to create and maintain your services and gateways in a quicker and more efficient manner.

Audience:
Beginning to intermediate developers who use Transfer ORM and are interested in learning about how to design an efficient OO model using Transfer.

NOTE: This is essentially the same presentation as option C, above, but with more Transfer-specific information, and less of an introduction for beginners. 


Option E:

Title:
Using Decorators with Transfer

Description: 
One of the most powerful features of Transfer ORM is the ability to create decorators that extend the capabilities of your Transfer Objects.  In this session we'll look at what decorators are and look at an example of an Abstract Transfer Decorator, which allows you to write methods which will be common to all of your Transfer decorators.  You can use this to add methods such as save(), delete(), copyToStruct(), populate() and validate() to your Transfer Objects.  We will also look at a tool that will allow you to inject other objects into your Transfer Objects, thereby granting them access to services, gateways or any utility objects that you may have in your arsenal.  You'll leave the session with an understanding of how to harness the full power of Transfer Decorators, as well as some tips and tricks that will turbo-charge your Transfer development.

Audience:
Beginning to intermediate developers who use Transfer ORM and are interested in learning more about Decorators and how to make full use of them.


I hope that I have provided you with the level of detail that you need to make a decision.  If you feel that one of the general areas that I described would be of interest, but not one of the specific presentations I'd be more than happy to work with you to design a presentation that would address what you think attendees will be looking for.

Regarding my experience and ability as a speaker, I have delivered over a dozen presentations to my local CFUG, I presented at the Fusebox Conference in 2001, and have delivered training as part of my job for a good part of my career, including a couple of years as a full-time instructor teaching data and process modelling.

Please feel free to contact me if you have any questions or comments,
Yours,
Bob Silverberg
